# Configuration file

##########################################################################################################
# basecosts
#--------------------------------------------------------------------------------------------------------#
# The base costs for all methods.
##########################################################################################################

basecosts {
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$canvas"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$canvas3d"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$clear"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$remove"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addDot"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addGroup"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addItem"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addLine"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addLines"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addPolygon"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addRectangle"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addText"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addTriangle"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$getSize"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D$addBox"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D$addFrame"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D$create"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getAlpha"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getColor"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getColour"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setAlpha"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setColor"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setColour"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable$getScale"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable$setScale"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getLineHeight"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getText"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$hasShadow"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setLineHeight"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setShadow"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setText"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$getItem"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$setItem"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D$getPoint"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D$setPoint"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$getPointCount"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$insertPoint"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$removePoint"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D$getPosition"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D$setPosition"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle$getSize"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle$setSize"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Box$getSize"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Box$setSize"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable$isDepthTested"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable$setDepthTested"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.ObjectRoot3D$recenter"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D$getPosition"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D$setPosition"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D$getRotation"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D$setRotation"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$capture"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$clearCaptures"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$say"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$tell"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$uncapture"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$capture"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$clearCaptures"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$say"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$uncapture"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getID"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getMetaOwner"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getName"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsLaser$fire"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner$getBlockMeta"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner$scan"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$getMetaByID"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$getMetaByName"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$sense"=0
    I:org.squiddev.plethora.integration.MethodDocumentation=0
    I:org.squiddev.plethora.integration.MethodMeta=0
    I:org.squiddev.plethora.integration.MethodTransferLocations=0
    I:"org.squiddev.plethora.integration.MethodsModules$filterModules"=0
    I:"org.squiddev.plethora.integration.MethodsModules$hasModule"=0
    I:"org.squiddev.plethora.integration.MethodsModules$listModules"=0
    I:org.squiddev.plethora.integration.baubles.MethodIntrospectionBaublesInventory=0
    I:"org.squiddev.plethora.integration.cbmp.MethodsMultipart$getSlottedPart"=0
    I:"org.squiddev.plethora.integration.cbmp.MethodsMultipart$getSlottedPartMeta"=0
    I:"org.squiddev.plethora.integration.cbmp.MethodsMultipart$listParts"=0
    I:"org.squiddev.plethora.integration.cbmp.MethodsMultipart$listSlottedParts"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsIntrospectionTurtle$getInventory"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle$swing"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle$use"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer$getMutationsList"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer$getSpeciesList"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer$getSpeciesRoots"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing$getDrone"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing$getHumidity"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing$getQueen"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing$getTemperature"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsErrorLogicSource$getErrors"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$MethodGetEuCapacity"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$MethodGetEuStored"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getConductionLoss"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getConductorBreakdownEnergy"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getDemandedEnergy"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getEUCapacity"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getEUOutput"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getEUStored"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getInsulationBreakdownEnergy"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getInsulationEnergyAbsorption"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getOfferedEnergy"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getSinkTier"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$getSourceTier"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsReactor$getReactorCore"=0
    I:org.squiddev.plethora.integration.refinedstorage.MethodCraftItem=0
    I:org.squiddev.plethora.integration.refinedstorage.MethodExportItem=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsCraftingTask$getComponents"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsCraftingTask$getMissing"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsCraftingTask$getPattern"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsCraftingTask$getSteps"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsCraftingTask$isFinished"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$findItem"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$findItems"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$getCraftingTasks"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$getNetworkEnergyStored"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$getNetworkEnergyUsage"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$getNodeEnergyUsage"=0
    I:"org.squiddev.plethora.integration.refinedstorage.MethodsNetworkNode$listAvailableItems"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$MaxMethodEnergyStoredItem"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$MethodEnergyStoredItem"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFCapacityHandler"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFCapacityStoredStorage"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFStoredHandler"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFStoredStorage"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer$getCapacity"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer$getCount"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer$getItemMeta"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawerGroup$getDrawer"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawerGroup$getDrawerCount"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery$getController"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery$getFuels"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery$getMolten"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery$getTemperature"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery$selectMolten"=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodFluidHandler=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodItemConsume=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodItemElytraActivate=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getCelestialAngle"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getDay"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getMoonPhase"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getTime"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getBlockLight"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getSkyLight"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getWeather"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$hasSky"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getEnder"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getEquipment"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getInventory"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$getItem"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$getItemMeta"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$list"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$size"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer$pullItems"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer$pushItems"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemDrop"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerDrop"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerSuck"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$disableAI"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$isWalking"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$launch"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$walk"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions$swing"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions$use"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$explode"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$look"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$propel"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$shoot"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$teleport"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock$playNote"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock$playSound"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getBrewTime"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getBurnTime"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getCookTime"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getRemainingBurnTime"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getSignText"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$setSignText"=0
}


##########################################################################################################
# blacklist
#--------------------------------------------------------------------------------------------------------#
# Blacklist various providers
##########################################################################################################

blacklist {
    # List of mods to block.
    #  IMPORTANT: This does not block wrapping a mod's peripherals, just disables
    #  custom mod specific integration.
    S:blacklistMods <
     >

    # List of modules to blacklist.
    S:blacklistModules <
     >

    # List of modules to blacklist from being mounted on a pocket computer.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesPocket <
     >

    # List of modules to blacklist from being mounted from a tile.
    # 
    #  For instance, the note block tile exposes the minecraft:noteblock module, allowing
    #  you to use that module from the tile's peripheral, rather than through a manipulator.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesTile <
     >

    # List of modules to blacklist from being mounted on a turtle.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesTurtle <
     >

    # List of modules to blacklist from being mounted on a minecart or other vehicle.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesVehicle <
     >

    # List of provider classes, packages or methods which are blacklisted.
    #  This will blacklist all converters, methods and transfer and meta providers
    #  matching a pattern.
    # 
    #  This only applies to classes registered through annotations and does not blacklist
    #  method builders.
    # 
    #  Valid forms:
    #  - "foo.bar." - All classes in package (note trailing period).
    #  - "foo.bar.Provider" - This class, all its members and nested classes
    #  - "foo.bar.Provider#method" - A particular method with a name
    S:blacklistProviders <
     >

    # List of tile entity classes or packages which will not be wrapped
    #  as peripherals. For example use "net.minecraft." to disable wrapping
    #  any vanilla peripheral. This does not blacklist subclasses.
    S:blacklistTileEntities <
     >
}


##########################################################################################################
# costsystem
#--------------------------------------------------------------------------------------------------------#
# Some methods have a particular cost: they
#  consume a set amount of energy from their owner.
#  This level regenerates over time.
# 
#  *Note:* These values only apply to the default handler.
#  Other mods may add custom handlers.
##########################################################################################################

costsystem {
    # Allow costs to go into the negative.
    #  Methods will fail when there is negative energy.
    #  This allows you to use costs higher than the allocated
    #  buffer and so have a more traditional rate-limiting system.
    B:allowNegative=false

    # Wait for the system to get sufficient energy instead of throwing
    #  an error.
    B:awaitRegen=true

    # The energy level all systems start at
    D:initial=100.0

    # The maximum energy level an item can have
    D:limit=100.0

    # The amount of energy regenerated each tick
    D:regen=10.0
}


##########################################################################################################
# testing
#--------------------------------------------------------------------------------------------------------#
# Various options for debugging and testing this mod
##########################################################################################################

testing {
    # Verify generated bytecode for built methods.
    #  Only needed if you're developing new method builders.
    B:bytecodeVerify=false

    # Show debug messages
    B:debug=false

    # Issue an an error if a method isn't documented.
    #  If strict is turned on this will throw an exception.
    B:likeDocs=false

    # Enable strict loading mode: crash when an error is encountered
    #  when injecting methods
    B:strict=false
}


